name: SenseTool CI/CD

on:
  push:
    branches: ["develop"]
    # tags:
    #   - "v*"

permissions:
  packages: write
  contents: write

jobs:
  build:
    name: SenseTool Testing & Deployment
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v1.1.1
        with:
          versionSpec: "5.x"

      - name: Determine Version
        id: version_step
        uses: gittools/actions/gitversion/execute@v1.1.1

      - name: Display GitVersion outputs (step output with prefix)
        run: |
          echo "FullSemVer (steps.version_step.outputs.GitVersion_FullSemVer) : ${{ steps.version_step.outputs.GitVersion_FullSemVer }}"

      # - name: Install Qt
      #   uses: jurplel/install-qt-action@v4
      #   with:
      #     version: "6.7.0"
      #     host: "windows"
      #     target: "desktop"
      #     arch: "win64_mingw"
      #     modules: "qtcharts qt5compat qtshadertools"
      #     dir: "${{ github.workspace }}/Qt/"
      #     install-deps: "true"

      # - name: Install Invoke & other deps
      #   run: |
      #     pip install --upgrade pip
      #     pip install invoke
      #     pip install -r requirements.txt

      # - name: get Dumpbin & add to path
      #   run: |
      #     curl -Lo dumpbin.zip https://github.com/Delphier/dumpbin/releases/download/v2022/dumpbin-2022.zip
      #     tar -xf dumpbin.zip
      #     echo "${{ github.workspace }}\x64" >> $env:GITHUB_PATH

      # - name: add qmltestrunner to path
      #   run: |
      #     echo "${{ github.workspace }}\Qt\6.7.0\win64_mingw\bin" >> $env:GITHUB_PATH

      # - name: Testing pyUnit and QMLUnit
      #   run: |
      #     invoke test

      # - name: Deploy App
      #   run: |
      #     invoke deploy
      #     Rename-Item -Path "main.exe" -NewName "sensetool.exe"

      # - name: Save CHANGELOG.md to GITHUB_ENV
      #   run: |
      #     echo "RELEASE_BODY=$(cat CHANGELOG.md)" >> $env:GITHUB_ENV

      # - name: Create Release
      #   id: create_release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: ${{ github.ref }}
      #     release_name: Release ${{ github.ref }}
      #     body: ${{ env.RELEASE_BODY }}
      #     draft: false
      #     prerelease: false

      # - name: Upload Release Asset
      #   id: upload-release-asset
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ${{ github.workspace }}\main.exe
      #     asset_name: main.exe
      #     asset_content_type: application/exe
